name: "Feature Development Workflow"
description: "Complete workflow for developing new features from requirements to deployment"
version: "1.0"
category: "development"
tags: ["feature", "development", "full-cycle"]

phases:
  - phase: "planning-clarification"
    description: "Requirements gathering and scope definition"
    required: true
    steps:
      - id: "gather-requirements"
        miniPrompt: "business/gather-requirements"
        required: true
        prerequisites:
          requiredContext: []
          optionalContext: ["product_roadmap", "user_feedback"]
        
      - id: "ask-clarifying-questions"
        miniPrompt: "development/ask-clarifying-questions"
        required: true
        prerequisites:
          requiredContext: ["requirements"]
          optionalContext: []
        dependencies: ["gather-requirements"]

  - phase: "analysis"
    description: "Technical analysis and architecture planning"
    required: true
    steps:
      - id: "feature-analysis"
        miniPrompt: "analysis/feature-analysis"
        required: true
        prerequisites:
          requiredContext: ["clarified_requirements"]
          optionalContext: ["existing_codebase", "system_architecture"]
        dependencies: ["ask-clarifying-questions"]
        
      - id: "architecture-analysis"
        miniPrompt: "analysis/architecture-analysis"
        required: false
        prerequisites:
          requiredContext: ["system_architecture"]
          optionalContext: ["performance_requirements"]
          skipConditions: ["simple_feature", "no_architecture_impact"]

  - phase: "design-architecture"
    description: "Solution design and architecture planning"
    required: true
    steps:
      - id: "create-trd"
        miniPrompt: "business/create-trd"
        required: true
        prerequisites:
          requiredContext: ["feature_analysis", "clarified_requirements"]
          optionalContext: ["architecture_analysis", "technical_decisions"]
        dependencies: ["feature-analysis"]
        
      - id: "design-architecture"
        miniPrompt: "development/design-architecture"
        required: true
        prerequisites:
          requiredContext: ["feature_analysis", "technical_requirements"]
          optionalContext: ["architecture_analysis", "existing_patterns"]
        dependencies: ["create-trd"]

  - phase: "implementation"
    description: "Technical execution and coding"
    required: true
    steps:
      - id: "implement-feature"
        miniPrompt: "development/implement-feature"
        required: true
        prerequisites:
          requiredContext: ["design_specifications"]
          optionalContext: ["development_environment", "coding_standards"]
        dependencies: ["design-architecture"]

  - phase: "testing-validation"
    description: "Quality assurance and validation"
    required: true
    steps:
      - id: "create-test-plan"
        miniPrompt: "qa/create-test-plan"
        required: true
        prerequisites:
          requiredContext: ["feature_specifications", "implemented_feature"]
          optionalContext: ["testing_framework", "test_data"]
        dependencies: ["implement-feature"]
        
      - id: "execute-tests"
        miniPrompt: "qa/execute-tests"
        required: true
        prerequisites:
          requiredContext: ["test_plan", "implemented_feature"]
          optionalContext: ["test_automation", "test_environments"]
        dependencies: ["create-test-plan"]
        
      - id: "code-review"
        miniPrompt: "development/code-review"
        required: true
        prerequisites:
          requiredContext: ["implemented_feature"]
          optionalContext: ["code_review_checklist"]
        dependencies: ["implement-feature"]

  - phase: "deployment-operations"
    description: "Production deployment"
    required: true
    steps:
      - id: "deploy-application"
        miniPrompt: "operations/deploy-application"
        required: true
        prerequisites:
          requiredContext: ["tested_feature", "deployment_environment"]
          optionalContext: ["deployment_pipeline", "rollback_procedures"]
        dependencies: ["execute-tests", "code-review"]

# Workflow-level configurations
skipConditions:
  - condition: "feature_already_implemented"
    message: "Feature has already been implemented and deployed"
  - condition: "requirements_incomplete"
    message: "Feature requirements are incomplete or unclear"

validationRules:
  - rule: "requirements_validation_required"
    phases: ["planning-clarification"]
    message: "Requirements validation required before proceeding to implementation"


notifications:
  - trigger: "phase_completion"
    phases: ["implementation", "testing-validation"]
    message: "Phase completed, ready for next phase"
  - trigger: "workflow_completion"
    message: "Feature development workflow completed successfully"

# Smart execution settings
execution:
  allowSkipping: true
  requireExplicitApproval: false
  automaticProgressTracking: true 