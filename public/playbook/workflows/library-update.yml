name: "Library Update Workflow"
description: "Streamlined dependency updates with safety checks and rollback capability"
version: "1.0"
category: "maintenance"
tags: ["dependencies", "libraries", "updates", "security", "maintenance", "npm"]

phases:
  - phase: "analysis"
    description: "Quick dependency assessment and risk evaluation"
    required: true
    steps:
      - id: "dependency-audit"
        miniPrompt: "analysis/dependency-audit"
        required: true
        prerequisites:
          requiredContext: ["package_json"]
          optionalContext: ["security_advisories", "known_issues"]

  - phase: "implementation"
    description: "Safe update execution with validation"
    required: true
    steps:
      - id: "implement-updates"
        miniPrompt: "development/implement-updates"
        required: true
        prerequisites:
          requiredContext: ["audit_results"]
          optionalContext: ["breaking_changes_list"]
        dependencies: ["dependency-audit"]

  - phase: "testing-validation"
    description: "Verify updates work correctly"
    required: true
    steps:
      - id: "execute-tests"
        miniPrompt: "qa/execute-tests"
        required: true
        prerequisites:
          requiredContext: ["updated_system"]
          optionalContext: ["test_suite", "critical_features"]
        dependencies: ["implement-updates"]
        
      - id: "update-review"
        miniPrompt: "review/update-review"
        required: false
        prerequisites:
          requiredContext: ["test_results", "updated_dependencies"]
          optionalContext: []
          skipConditions: ["simple_updates", "no_breaking_changes", "patch_updates_only"]
        dependencies: ["execute-tests"]

# Workflow-level configurations
skipConditions:
  - condition: "dependencies_up_to_date"
    message: "All dependencies are current and no security vulnerabilities found"
  - condition: "breaking_changes_too_risky"
    message: "Breaking changes require dedicated feature development workflow"

validationRules:
  - rule: "backup_recommended"
    phases: ["implementation"]
    message: "⚠️  IMPORTANT: Ensure your code is committed to git before proceeding with updates"

notifications:
  - trigger: "security_vulnerability_found"
    phases: ["analysis"]
    message: "Security vulnerabilities detected, prioritize urgent updates"
  - trigger: "workflow_completion"
    message: "Library updates completed successfully"

# Smart execution settings
execution:
  allowSkipping: true
  requireExplicitApproval: true
  automaticProgressTracking: true