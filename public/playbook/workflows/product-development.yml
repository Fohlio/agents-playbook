name: "MVP Product Development Workflow"
description: "Build working MVP foundation - core functionality skeleton ready for feature additions"
objective: "Create deployable minimum viable product that validates core concept and user value"
version: "1.0"
category: "mvp-development"
tags: ["mvp", "skeleton", "foundation", "core-product", "minimal-viable"]

# MVP scope definition
scope:
  include: ["core user flow", "essential business logic", "basic UI/UX", "deployment foundation"]
  exclude: ["advanced features", "optimization", "nice-to-have functionality"]
  
transitionTo: "feature-development.yml"
transitionWhen: ["mvp_deployed", "core_validation_complete", "user_feedback_collected"]

mvpGuidance:
  globalContext: "Building MVP skeleton - focus on working foundation, not feature completeness"

phases:
  - phase: "planning-clarification"
    description: "MVP scope definition and requirements clarification - CRITICAL: Ask detailed clarifying questions about MVP vision, scope, and user needs before proceeding"
    required: true
    steps:
      - id: "ask-clarifying-questions"
        miniPrompt: "development/ask-clarifying-questions"
        required: true
        prerequisites:
          requiredContext: []
          optionalContext: ["product_vision", "initial_concept"]
        
      - id: "create-structured-requirements"
        miniPrompt: "business/create-structured-requirements"
        required: true
        prerequisites:
          requiredContext: ["clarified_requirements"]
          optionalContext: ["user_personas", "business_context", "mvp_scope"]
        dependencies: ["ask-clarifying-questions"]
        outputs: ["structured_requirements", "user_stories", "acceptance_criteria"]
        
      - id: "create-implementation-plan"
        miniPrompt: "business/create-implementation-plan"
        required: true
        prerequisites:
          requiredContext: ["structured_requirements", "clarified_requirements"]
          optionalContext: ["technical_architecture", "development_environment", "team_capabilities", "mvp_scope"]
        dependencies: ["create-structured-requirements"]
        outputs: ["implementation_plan", "task_breakdown", "technical_specifications"]
        
      - id: "handoff-to-design"
        miniPrompt: "handoff-memory-board"
        required: true
        prerequisites:
          requiredContext: ["clarified_requirements", "structured_requirements", "implementation_plan"]
          optionalContext: []
        dependencies: ["create-implementation-plan"]

  - phase: "design-architecture"
    description: "MVP architecture and core design"
    required: true
    steps:
      - id: "design-architecture"
        miniPrompt: "development/design-architecture"
        required: true
        prerequisites:
          requiredContext: ["clarified_requirements", "structured_requirements", "implementation_plan"]
          optionalContext: ["design_guidelines", "technical_constraints"]
        dependencies: ["handoff-to-design"]
        
      - id: "handoff-to-implementation"
        miniPrompt: "handoff-memory-board"
        required: true
        prerequisites:
          requiredContext: ["design_specifications", "implementation_plan"]
          optionalContext: []
        dependencies: ["design-architecture"]

  - phase: "implementation"
    description: "Product development and implementation"
    required: true
    steps:
      - id: "implement-feature"
        miniPrompt: "development/implement-feature"
        required: true
        prerequisites:
          requiredContext: ["design_specifications", "implementation_plan"]
          optionalContext: ["development_environment", "coding_standards"]
        dependencies: ["handoff-to-implementation"]
        
      - id: "handoff-to-testing"
        miniPrompt: "handoff-memory-board"
        required: true
        prerequisites:
          requiredContext: ["implemented_features"]
          optionalContext: []
        dependencies: ["implement-feature"]

  - phase: "testing-validation"
    description: "Quality assurance and user validation"
    required: true
    steps:
      - id: "create-test-plan"
        miniPrompt: "qa/create-test-plan"
        required: true
        prerequisites:
          requiredContext: ["implemented_features", "product_requirements"]
          optionalContext: ["acceptance_criteria"]
        dependencies: ["handoff-to-testing"]
        
      - id: "execute-tests"
        miniPrompt: "qa/execute-tests"
        required: true
        prerequisites:
          requiredContext: ["test_plan", "implemented_features"]
          optionalContext: ["test_automation"]
        dependencies: ["create-test-plan"]
        
      - id: "handoff-to-review"
        miniPrompt: "handoff-memory-board"
        required: true
        prerequisites:
          requiredContext: ["test_results", "validated_features"]
          optionalContext: []
        dependencies: ["execute-tests"]

  - phase: "review"
    description: "Product quality assessment and validation"
    required: true
    steps:
      - id: "deliverable-review"
        miniPrompt: "review/deliverable-review"
        required: true
        prerequisites:
          requiredContext: ["implemented_features", "test_results", "product_requirements"]
          optionalContext: ["user_feedback"]
        dependencies: ["handoff-to-review"]
        



# Workflow-level configurations
skipConditions:
  - condition: "mvp_already_deployed"
    message: "MVP has already been successfully deployed"
  - condition: "insufficient_core_requirements"
    message: "Insufficient core requirements for MVP development"

validationRules:
  - rule: "mvp_scope_validation_required"
    phases: ["planning-clarification"]
    message: "MVP scope must be clearly defined before development"
  - rule: "core_functionality_testing_required"
    phases: ["testing-validation"]
    dependencies: ["implementation"]
    message: "Core functionality testing must be completed before MVP launch"
  - rule: "deployment_readiness_required"
    phases: ["review"]
    dependencies: ["testing-validation"]
    message: "MVP must be deployment-ready before completion"

# MVP-specific focus rules
mvpFocus:
  - rule: "core_functionality_only"
    message: "Focus on essential features needed for MVP - avoid feature creep"
  - rule: "minimal_viable_scope"
    message: "Build the smallest version that provides user value"
  - rule: "deployment_first"
    message: "Prioritize getting working version deployed over feature completeness"

notifications:
  - trigger: "phase_completion"
    phases: ["implementation", "testing-validation", "review"]
    message: "Major MVP phase completed, ready for next milestone"
  - trigger: "workflow_completion"
    message: "MVP development completed - ready to transition to feature-development.yml"
  - trigger: "mvp_ready_for_features"
    message: "MVP foundation established, switch to feature development workflow for enhancements"

# Smart execution settings
execution:
  allowSkipping: true
  requireExplicitApproval: false
  automaticProgressTracking: true 